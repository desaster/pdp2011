       1                                         .title   M9312 boot roms
       2                                ;
       3                                ;
       4                                ; boot code taken from http://ak6dn.dyndns.org/PDP-11/M9312/ and modified to work with m9312l47.mac
       5                                ; which does not include diagnostics, does not use the rom code letters.
       6                                ;
       7                                
       8 000001                         bit0     =000001              ; plain old bit definitions
       9 000002                         bit1     =000002              ;
      10 000004                         bit2     =000004              ;
      11 000010                         bit3     =000010              ;
      12 000020                         bit4     =000020              ;
      13 000040                         bit5     =000040              ;
      14 000100                         bit6     =000100              ;
      15 000200                         bit7     =000200              ;
      16 000400                         bit8     =000400              ;
      17 001000                         bit9     =001000              ;
      18 002000                         bit10    =002000              ;
      19 004000                         bit11    =004000              ;
      20 010000                         bit12    =010000              ;
      21 020000                         bit13    =020000              ;
      22 040000                         bit14    =040000              ;
      23 100000                         bit15    =100000              ;
      24                                
      25 000040                         BL       =040                 ; ascii SPACE
      26 000015                         CR       =015                 ; ascii CR
      27 000012                         LF       =012                 ; ascii LF
      28 000400                         U        =bit8                ; upperbyte multiplier
      29 000001                         L        =bit0                ; lowerbyte multiplier
      30                                
      31                                         .asect
      32 173000                                  .=173000
      33                                ;
      34                                ;
      35                                ;
      36 173000 000137  173014                   jmp   @#boot         ; 173000
      37 173004 000137  173440                   jmp   @#prtoct       ; 173004
      38                                bprtascz:
      39 173010 000137  173414                   jmp   @#prtascz      ; 173010
      40                                ;
      41                                ; boot: boot from first controller that exists in the system out of rk,rl,rh
      42                                ;
      43                                boot:
      44 173014 012706  001000                   mov   #1000,sp
      45 173020 005037  000006                   clr   @#6
      46 173024 012737  173050  000004           mov   #nork,@#4
      47 173032 005737  177400                   tst   @#177400
      48 173036 012702  173506                   mov   #bootrk,r2
      49 173042 010701                           mov   pc,r1
      50 173044 000761                           br    bprtascz
      51 173046 000503                           br    rkgo
      52                                ;
      53                                nork:
      54 173050 012737  173074  000004           mov   #norl,@#4
      55 173056 005737  174400                   tst   @#174400
      56 173062 012702  173530                   mov   #bootrl,r2
      57 173066 010701                           mov   pc,r1
      58 173070 000747                           br    bprtascz
      59 173072 000417                           br    rlgo
      60                                ;
      61                                norl:
      62 173074 012737  173120  000004           mov   #norp,@#4
      63 173102 005737  176700                   tst   @#176700
      64 173106 012702  173552                   mov   #bootrp,r2
      65 173112 010701                           mov   pc,r1
      66 173114 000735                           br    bprtascz
      67 173116 000502                           br    rpgo
      68                                ;
      69                                norp:
      70 173120 012702  173574                   mov   #nodev,r2
      71 173124 010701                           mov   pc,r1
      72 173126 000730                           br    bprtascz
      73 173130 000000                           halt
      74                                
      75                                ; --------------------------------------------------
      76                                ; rl
      77                                ; --------------------------------------------------
      78                                
      79 174400                         rlcsr     =174400             ; std RL11 csrbase
      80                                
      81 000000                         rlcs      =+0                 ; control/status
      82 000002                         rlba      =+2                 ; bus address
      83 000004                         rlda      =+4                 ; disk address
      84 000006                         rlmp      =+6                 ; multipurpose
      85                                
      86 000004                         cmstat    =2*2                ; get status
      87 000006                         cmseek    =3*2                ; seek
      88 000010                         cmrdhd    =4*2                ; read header
      89 000014                         cmrdda    =6*2                ; read data
      90                                
      91 173132 012701  174400          rlgo:    mov   #rlcsr,r1
      92 173136 005011                           clr   (r1)           ; clear unit number etc
      93 173140 012761  000013  000004           mov   #013,rlda(r1)  ; subcmd reset+getstatus
      94 173146 012711  000004                   mov   #cmstat,(r1)   ; execute
      95 173152 105711                  1$:      tstb  (r1)           ; test for ready
      96 173154 100376                           bpl   1$             ; wait
      97                                
      98 173156 012711  000010                   mov   #cmrdhd,(r1)   ; execute
      99 173162 105711                  2$:      tstb  (r1)           ; test for ready
     100 173164 100376                           bpl   2$             ; wait
     101                                
     102 173166 016102  000006                   mov   rlmp(r1),r2    ; retrieve cyl/head/sector
     103 173172 042702  000077                   bic   #77,r2         ; set sector to zero
     104 173176 005202                           inc   r2             ; set head 0, seek to cyl 0
     105 173200 010261  000004                   mov   r2,rlda(r1)    ; into da for seek
     106 173204 012711  000006                   mov   #cmseek,(r1)        ; execute
     107 173210 105711                  3$:      tstb  (r1)           ; test for ready
     108 173212 100376                           bpl   3$             ; wait
     109                                
     110 173214 005061  000004                   clr   rlda(r1)       ; select cyl0/head0/sector0
     111 173220 012761  177000  000006           mov   #-512.,rlmp(r1)      ; set word count
     112 173226 012711  000014                   mov   #cmrdda,(r1)        ; execute
     113 173232 105711                  4$:      tstb  (r1)           ; test for ready
     114 173234 100376                           bpl   4$             ; wait
     115                                
     116 173236 005711                           tst   (r1)           ; test for error
     117 173240 100003                           bpl   5$             ; br if ok
     118 173242 000005                           reset                ; ERROR - reset the world
     119 173244 000164  000002                   jmp   2(r4)          ; retry
     120                                
     121 173250 042711  000377          5$:      bic   #377,(r1)      ; execute nop cmd
     122 173254 005007                           clr   pc             ; jump to bootstrap at zero
     123                                
     124                                ; --------------------------------------------------
     125                                ; rk
     126                                ; --------------------------------------------------
     127                                
     128 177400                         rkcsr    =177400              ; std RK03/05 DECdisk csrbase
     129                                
     130 000002                         rkwc     =+6-4                ; word count
     131 000006                         rkda     =+12-4               ; disk address
     132                                
     133 177340                         tccsr    =177340              ; std TU55/56 DECtape csrbase
     134                                
     135 177776                         tccs     =+0-2                ; control/status
     136 000002                         tcwc     =+4-2                ; word count
     137                                
     138 000002                         xxwc     =rkwc                ; common word count offset
     139                                
     140 165564                         diags    =165564              ; console diags phase2 entry
     141                                
     142                                
     143 173256 012701  177404          rkgo:    mov   #rkcsr+4,r1    ; boot std csr, unit <R0>
     144 173262 005061  000006                   clr rkda(r1)         ; unit number, sector 0 to disk addr
     145                                
     146 173266 012761  177000  000002  common:  mov   #-512.,xxwc(r1)   ; set word count
     147 173274 012711  000005                   mov   #5,(r1)        ; execute READ+GO
     148 173300 105711                  2$:      tstb  (r1)           ; test ready
     149 173302 100376                           bpl   2$             ; loop
     150                                
     151 173304 005711                           tst   (r1)           ; check error
     152 173306 100003                           bpl   3$             ; br if no error
     153                                
     154 173310 000005                           reset                ; reset the world
     155 173312 000164  000002                   jmp   2(r4)          ; and retry
     156                                
     157 173316 042711  000377          3$:      bic   #377,(r1)      ; nop command
     158 173322 005007                           clr   pc             ; jump to loaded boot sector
     159                                
     160                                
     161                                ; --------------------------------------------------
     162                                ; rp
     163                                ; --------------------------------------------------
     164                                
     165 176700                         rmcsr    =176700              ; std RH11 csrbase
     166                                
     167 000000                         rpcs  =+0                     ; control status offset
     168 000002                         rpwc  =+2                     ; word count offset
     169 000004                         rpba  =+4                     ; bus addr offset
     170 000010                         rpcs2 =+10                    ; control status 2 offset
     171 000016                         rpas  =+16                    ; atten summary offset
     172 000032                         rpof  =+32                    ; offset register offset
     173                                
     174                                
     175 173324 012701  176700          rpgo:    mov   #rmcsr,r1      ; boot std csr, unit <R0>
     176                                
     177 173330 005061  000010                   clr   rpcs2(r1)   ; set unit number into controller
     178 173334 012702  000071                   mov   #071,r2        ; READ+GO command code
     179 173340 012711  000021                   mov   #021,(r1)      ; RIP+GO command
     180 173344 012761  014000  000032           mov   #014000,rpof(r1)  ; set 16b mode, inhibit ECC mode
     181 173352 016161  000016  000016           mov   rpas(r1),rpas(r1) ; clear attention bits
     182                                
     183 173360 012761  177000  000002           mov   #-512.,rpwc(r1)      ; set word count
     184 173366 010211                           mov   r2,(r1)        ; execute read command
     185 173370 105711                  2$:      tstb  (r1)           ; test unit ready
     186 173372 100376                           bpl   2$             ; br if not yet
     187                                
     188 173374 005711                           tst   (r1)           ; test any error
     189 173376 100003                           bpl   3$             ; br if not
     190                                
     191 173400 000005                           reset                ; error, reset the world
     192 173402 000164  000002                   jmp   2(r4)          ; and jump back to restart
     193                                
     194 173406 042711  000377          3$:      bic   #377,(r1)      ; nop command, clear controller
     195 173412 005007                           clr   pc             ; jump to bootstrap start
     196                                
     197                                
     198                                ;
     199                                ; prtascz
     200                                ; r1 - return address
     201                                ; r2 - pointer to asciz string
     202                                ;
     203                                prtascz:
     204                                $10:
     205 173414 105737  177564                   tstb  @#177564
     206 173420 100375                           bpl   $10
     207 173422 105712                           tstb  (r2)
     208 173424 001403                           beq   $20
     209 173426 112237  177566                   movb  (r2)+,@#177566
     210 173432 000770                           br    $10
     211                                $20:
     212 173434 000161  000002                   jmp   2(r1)
     213                                ;
     214                                ; prtoct
     215                                ;
     216                                ; R0 = register value to print
     217                                ; R1 = return address
     218                                ; R2 = temp char
     219                                ; R3 = temp addr
     220                                
     221 173440 012702  000030          prtoct:  mov   #<'0/bit1>,r2  ; ascii 0 right 1b
     222 173444 000261                           sec                  ; shift a 1 into R0 lsb as done bit
     223 173446 006100                  1$:      rol   r0             ; msb out of R0
     224 173450 106102                           rolb  r2             ; into lsb of R2
     225 173452 105737  177564                   tstb  @#177564
     226 173456 100375                           bpl   .-4
     227 173460 110237  177566                   movb  r2,@#177566
     228 173464 012702  020206                   mov   #<BL*bit8>+200+<'0/bit3>,r2 ; ascii SP upper, ascii 0 right 3b lower
     229 173470 006300                  2$:      asl   r0             ; msb out of R0
     230 173472 001403                           beq   3$             ; when R0 has gone to zero we are done
     231 173474 106102                           rolb  r2             ; into lsb of R2
     232 173476 103774                           bcs   2$             ; loop once more if flagbit was set
     233 173500 000762                           br    1$             ; go get last bit and print char
     234                                3$:
     235 173502 000161  000002                   jmp   2(r1)          ; return
     236                                ;
     237                                ;
     238                                ;
     239 173506    015     012          bootrk:  .ascii <15><12>
     240 173510    142     157     157           .ascii /boot from rk:/
         173513    164     040     146  
         173516    162     157     155  
         173521    040     162     153  
         173524    072                  
     241 173525    015     012     000           .asciz <15><12>
     242 173530    015     012          bootrl:  .ascii <15><12>
     243 173532    142     157     157           .ascii /boot from rl:/
         173535    164     040     146  
         173540    162     157     155  
         173543    040     162     154  
         173546    072                  
     244 173547    015     012     000           .asciz <15><12>
     245 173552    015     012          bootrp:  .ascii <15><12>
     246 173554    142     157     157           .ascii /boot from rp:/
         173557    164     040     146  
         173562    162     157     155  
         173565    040     162     160  
         173570    072                  
     247 173571    015     012     000           .asciz <15><12>
     248 173574    015     012          nodev:   .ascii <15><12>
     249 173576    142     157     157           .ascii /boot: no dev/
         173601    164     072     040  
         173604    156     157     040  
         173607    144     145     166  
     250 173612    015     012     000           .asciz <15><12>
     251 173615    000                           .even
     252                                
     253 173616    155     156     143  mincad:  .asciz /mncad/
         173621    141     144     000  
     254 173624    155     156     143  minckw:  .asciz /mnckw/
         173627    153     167     000  
     255 173632    155     156     143  mincaa:  .asciz /mncaa/
         173635    141     141     000  
     256 173640    155     156     143  mincdi:  .asciz /mncdi/
         173643    144     151     000  
     257 173646    155     156     143  mincdo:  .asciz /mncdo/
         173651    144     157     000  
     258                                
     259 173654    155     071     063  m9312:   .asciz /m9312/
         173657    061     062     000  
     260 173662    144     162     061  mdr11c:  .asciz /dr11/
         173665    061     000          
     261 173667    154     155     141  mlma:    .asciz /lma/
         173672    000                  
     262                                
     263                                   .end
     263                                
